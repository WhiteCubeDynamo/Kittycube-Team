// AUTO-GENERATED CODE - DO NOT EDIT MANUALLY!
// This file is automatically generated from YAML files in DialogueData folder
// Regenerated whenever YAML files are modified

using System.Collections.Generic;
using System.Linq;

namespace DialogueSystem
{
    public static class EmbeddedDialogues
    {
        public const string Loose = "title: \"Loose Dialogue\"\nlines:\n\n  - speaker: \"Guard\"\n    text: \"Look at this pathetic excuse for a propaganda brainwashed idiot. Thought you could steal from the state's museums and get away with it?\"\n\n  - speaker: \"Warden\"\n    text: \"A museum thief pretending to be a hero. How noble. You're nothing but a common criminal hiding behind politics.\"\n\n  - speaker: \"Guard\"\n    text: \"Silent treatment, eh? Typical coward. Can't even defend your so-called 'cause' now that you're caught.\"\n\n  - speaker: \"Interrogator\"\n    text: \"You know what's funny? You thought stealing artifacts would somehow help. All you did was give us an excuse to tighten security.\"\n\n  - speaker: \"Guard\"\n    text: \"The other prisoners laugh at you, you know. Even the real criminals think you're a joke.\"\n\n  - speaker: \"Warden\"\n    text: \"A thief is a thief, no matter what pretty ideals you dress it up with. You're going to rot here like the petty criminal you are.\"\n\n  - speaker: \"Guard\"\n    text: \"Still not talking? Good. We prefer our political prisoners broken and silent.\"\n\n  - speaker: \"Interrogator\"\n    text: \"You thought you were some kind of resistance fighter? You're just a delusional burglar who got caught.\"\n\n  - speaker: \"Guard\"\n    text: \"Hey everyone, come look at the 'freedom fighter' who fights tyranny by stealing old paintings!\"\n\n  - speaker: \"Warden\"\n    text: \"Twenty years, minimum. That's what your 'heroic' museum heist earned you. Hope it was worth it.\"\n\n  - speaker: \"Game\"\n    text: \"YOU LOOSE!\"\n    trigger: \"loose_end\"\n";

        public const string MuseumEntrance = "title: \"Museum Entrance\"\nlines:\n  - id: \"start\"\n    speaker: \"Guard\"\n    text: \"Stop! The museum is closed. What are you doing here?\"\n    \n  - speaker: \"Narrator\"\n    text: \"You need to choose how to respond to the guard.\"\n    choices_from_story_manager: true\n    story_location: \"MuseumEntrance\"\n    \n  - id: \"sneak_success\"\n    speaker: \"Narrator\"\n    text: \"You successfully sneak past the guard into the museum.\"\n    trigger: \"enter_museum\"\n    \n  - id: \"caught\"\n    speaker: \"Guard\"\n    text: \"Nice try! You're coming with me.\"\n    trigger: \"game_over\"\n";

        public const string TestDialogue = "title: \"Test Dialogue\"\nlines:\n  - id: \"start\"\n    speaker: \"Guard\"\n    text: \"Hey, you're not supposed to be here!\"\n    \n  - speaker: \"Player\"\n    text: \"I was just leaving leaves...\"\n    trigger: \"start_stealth_mode\"\n";

        public const string Tutorial = "title: \"Tutorial Dialogue\"\nlines:\n\n  - speaker: \"Thief\"\n    text: \"Hi. I am me. I mean, you are controlling me.\"\n  - speaker: \"Thief\"\n    text: \"Use WASD for move. Shift run. C crouch. E take item. Q throw.\"\n  - speaker: \"Thief\"\n    text: \"Get a dice and deliver it back to start. Then get all others.\"\n  - speaker: \"Thief\"\n    text: \"Nobody must see us.\"\n";

        public const string Win = "title: \"Win Dialogue\"\nlines:\n\n  - speaker: \"Thief\"\n    text: \"Finally all artifacts collected!\"\n  - speaker: \"Thief\"\n    text: \"But states where they was stolen was too afraid to accept them back.\"\n  - speaker: \"Thief\"\n    text: \"So I had to keep those dices until they change their mind.\"\n    trigger: \"win_end\"\n";

        private static readonly Dictionary<string, string> _dialogues = new Dictionary<string, string>
        {
            ["loose"] = Loose,
            ["museum_entrance"] = MuseumEntrance,
            ["test_dialogue"] = TestDialogue,
            ["tutorial"] = Tutorial,
            ["win"] = Win
        };

        public static string GetDialogue(string name)
        {
            return _dialogues.TryGetValue(name, out string dialogue) ? dialogue : null;
        }

        public static bool HasDialogue(string name)
        {
            return _dialogues.ContainsKey(name);
        }

        public static string[] GetAllDialogueNames()
        {
            return _dialogues.Keys.ToArray();
        }

        public static Dictionary<string, string> GetAllDialogues()
        {
            return new Dictionary<string, string>(_dialogues);
        }
    }
}
